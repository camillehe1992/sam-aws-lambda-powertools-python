AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-aws-lambda-powertools-python

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Api:
    EndpointConfiguration: REGIONAL
    TracingEnabled: true
    Cors: # https://awslabs.github.io/aws-lambda-powertools-python/latest/core/event_handler/api_gateway/#cors
      # AllowOrigin: "'https://example.com'"
      AllowOrigin: "'*'" # Dev only
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date'"
      MaxAge: "'300'"
    BinaryMediaTypes: # https://awslabs.github.io/aws-lambda-powertools-python/latest/core/event_handler/api_gateway/#binary-responses
      - "*~1*" # converts to */* for any binary type
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.9
    Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
    # Embed Lambda Powertools as a shared Layer
    # See: https://awslabs.github.io/aws-lambda-powertools-python/latest/#lambda-layer
    Layers: #
      - !Ref LambdaLayer
    Environment:
      Variables:
        # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
        LOG_LEVEL: DEBUG
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_METRICS_NAMESPACE: Todos
        POWERTOOLS_SERVICE_NAME: todos

Resources:
  TodoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: todos

  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
        - python3.10
      Content:
        S3Bucket: !Sub aws-lambda-powertools-python-${AWS::AccountId}
        S3Key: aws-lambda-powertools-python.zip
      Description: AWS Lambda Powertools for Python
      LayerName: aws-lambda-powertools-python
      LicenseInfo: MIT

  TodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      FunctionName: todos
      Handler: app.lambda_handler
      CodeUri: src
      Description: Todos function
      Events:
        # HelloPath:
        #   Type: Api # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
        #   Properties:
        #     Path: /hello
        #     Method: GET
        # HelloYou:
        #   Type: Api
        #   Properties:
        #     Path: /hello/{name}
        #     Method: GET
        GetAllTodos:
          Type: Api
          Properties:
            Path: /todos
            Method: GET
        GetTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: GET
        CreateTodo:
          Type: Api
          Properties:
            Path: /todos
            Method: POST
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: PUT
        DeleteTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: DELETE
      Policies: # Example inline policy
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "ssm:GetParameter"
                - "dynamodb:*"
              Resource:
                - "*"
      Environment:
        Variables:
          PARAM1: VALUE
      Tags:
        LambdaPowertools: python

  #Sample policy to add additional permissions to your Lambda
  # TodoFunctionAdditionalPermission:
  #   Type: "AWS::IAM::Policy"
  #   Properties:
  #     PolicyName: "root"
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Action: "ssm:GetParameters"
  #           Resource: "*"
  #     Roles:
  #       - !Ref TodoFunctionRole # Sample policy to demonstrate Implicit IAM Role created with SAM

Outputs:
  TodoApigwURL:
    Description: "API Gateway endpoint URL for Prod environment for Todos Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"

  TodoFunction:
    Description: "Todos Lambda Function ARN"
    Value: !GetAtt TodoFunction.Arn
